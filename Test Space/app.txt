#basic guide map and dev plan

# Generate a Fernet key for encryption ✅
key = Fernet.generate_key()
fernet = Fernet(key)
# Save the key to a file
with open('key.key', 'wb') as key_file:
    key_file.write(key)

# Load the key from the file when the application starts
with open('key.key', 'rb') as key_file:
    key = key_file.read()
fernet = Fernet(key)

#button updates
//update button✅
update_button = tk.Button(text="Update Password", command=update_password)
update_button.grid(row=3, column=2)
//del button
delete_button = tk.Button(text="Delete Password", command=delete_password)
delete_button.grid(row=3, column=3)



#del function
def delete_password():
    selected_password = passwords_listbox.get(passwords_listbox.curselection())
    if not selected_password:
        messagebox.showerror("Error", "Please select a password to delete.")
        return

    # Split the selected password into parts
    parts = selected_password.split(", ")
    website, username, password = parts[0].split(": ")[1], parts[1].split(": ")[1], parts[2].split(": ")[1]

    # Confirm the deletion
    confirmation = messagebox.askyesno("Confirm Deletion", f"Do you want to delete the password for {website} (Username: {username})?")
    if confirmation:
        # Delete the password from the database
        cursor.execute("DELETE FROM passwords WHERE website = ? AND username = ?", (website, username))
        conn.commit()

        display_passwords()
        messagebox.showinfo("Success", "Password deleted successfully!")

